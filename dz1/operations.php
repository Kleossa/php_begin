<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Document</title>
</head>
<body>
  
<?php
    // объединение строковых переменных в одну
    $a = 'Hello,';
    $b = 'world';
    $c = $a . $b; //оператор "." производит объединение двух текстовых переменных, получившееся значение записывается в переменную $c
    echo $c;
?> 
<br>
    
<?php
    // математические операции
    $a = 4;
    $b = 5;
    echo $a + $b . '<br>';    // сложение       операция выполняется слева на право поочередно сначала произойдет сложение $a и $b, затем будет число преобразовано в строку и произойдет объединение со строковым значением br
    echo $a * $b . '<br>';    // умножение
    echo $a - $b . '<br>';    // вычитание
    echo $a / $b . '<br>';  // деление
    echo $a % $b . '<br>'; // остаток от деления 
    echo $a ** $b . '<br>'; // возведение в степень
    // остальные операции производятся аналогично описанной в сложении
?>
<br>

<?php
    $a = 4;
    $b = 5;
    $a += $b; // $a = $a + $b в переменную $a запишется результат от сложения $a и $b
    echo 'a = ' . $a; // выведется на страницу  а = 9 (результат сложения в предыдущей строке)
    $a = 0;     // присваиваем переменной значение 0
    echo $a++;     // выведется на страницу значение 0, затем переменная увеличится на единицу, Постинкремент
    echo ++$a;    // переменная увеличится на единицу (станет равной 2), затем выведется на экран, Преинкремент
    echo $a--;     // выведется на страницу значение 2, затем переменная уменьшится на единицу, Постдекремент
    echo --$a;    // переменная уменьшится на единицу (станет равной 0), затем выведется на экран, Предекремент
?>
<br>

<?php
    // операции сравнения, Функция var_dump позволяет вывести тип переменной и её значение
    $a = 4;
    $b = 5;
    //везде производится логическое сравнение, поэтому тип переменной boolean(bool)
    var_dump($a == $b);  // выводится false (так как 4 не равно 5), Сравнение по значению
    var_dump($a === $b); // выводится false (тип переменных одинаковый, но значения разные), Сравнение по значению и типу
    var_dump($a > $b);    // выводится false (так как 4 меньше 5), Сравнение по значению
    var_dump($a < $b);    // выводится true (так как 4 меньше 5), Сравнение по значению
    var_dump($a <> $b);  // выводится true (так как 4 не равно 5), Сравнение по значению
    var_dump($a != $b);   // выводится true (так как 4 не равно 5), Сравнение по значению
    var_dump($a !== $b); // выводится true, тип данных одинаковых, значения не равны (Не равно без приведения типов)
    var_dump($a <= $b);  // выводится true (так как 4 меньше 5), Сравнение по значению
    var_dump($a >= $b);  // выводится false (так как 4 меньше 5), Сравнение по значению
?>
<br>

<?php
        //задание 3 из методички
    $a = 5;
    $b = '05';
    var_dump($a == $b);                             // Почему true? Ответ: Так как не строго типизированное сравнение (только по значению) переменные $b и $a приводятся к одинаковому типу и сравниваются
    var_dump((int)'012345');                        // Почему 12345? Ответ: приведение к типу int, в целочисленных значениях первый ноль не является значащим
    var_dump((float)123.0 === (int)123.0); // Почему false? Ответ: так как разный тип переменных, а сравнение производтся и по занчению, и по типу
    var_dump((int)0 === (int)'hello, world'); // Почему true? Ответ: так как тип переменных одинаковый, и если строку нельзя привести к числу то  при приведениии типов получим ноль
?>
<br>

<?php
    //Используя только две переменные, поменяйте их значение местами. Например, если a = 1, b = 2, надо, чтобы получилось: a = 2b = 1, . Дополнительные переменные использовать нельзя
    $a = 2;
    $b = 3;
    $a = $a + $b;
    $b = $a - $b;
    $a = $a - $b; 
    echo "a = $a ; b = $b";
?>



    
</body>
</html>